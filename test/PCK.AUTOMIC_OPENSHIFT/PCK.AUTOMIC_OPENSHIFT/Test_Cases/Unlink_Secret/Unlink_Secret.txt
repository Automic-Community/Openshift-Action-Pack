*** Settings ***
Suite Setup       Startup
Suite Teardown    Teardown
Force Tags        unlink_secret
Test Template     Unlink Secret Template
Library           com.automic.robot.itpa.ItpaLibrary
Library           String
Library           DateTime
Resource          ../../Resources/messages.txt
Resource          ../../Resources/keywords.txt
Resource          ../../Resources/variables.txt
Resource          ../../Resources/actions.txt

*** Test Cases ***    OK_NOK    ServiceAccountName    SecretName        ProjectName
Unlink Secret action with valid values passed in all fields
                      [Tags]    main_scenarios
                      OK        {Service_Acc_Name}    ${Secret_Name}    ${Project_Name}

Unlink Secret action with valid values passed in only mandatory fields
                      OK        {Service_Acc_Name}    ${Secret_Name}    ${EMPTY}

Mandatory assertion test for Unlink Secret when Service Account Name is not provided
                      NOK       {EMPTY}               ${Secret_Name}    ${Project_Name}

Mandatory assertion test for Unlink Secret when Secret Name is not provided
                      NOK       {Service_Acc_Name}    ${EMPTY}          ${Project_Name}

Unlink Secret action with invalid service account name
                      NOK       Invalid               ${Secret_Name}    ${EMPTY}

Unlink Secret action with invalid Secret name
                      NOK       {Service_Acc_Name}    Invalid           ${EMPTY}

Unlink Secret action with invalid/non-existent Project Name
                      NOK       {Service_Acc_Name}    {Secret_Name}     Invalid

*** Keywords ***
Startup
    Log    *******Start Test "UNLINK SECRET"*******
    Log    *******Connect to AE*******
    Connect AE

Cancel build Template
    [Arguments]    ${OK_NOK}    ${ServiceAccountName}    ${SecretName}    ${SecretUse}    ${ProjectName}
    [Documentation]    This test unlinks a secret file from the specified service account
    ...    -${OK_NOK}: Boolean value indicate if the action is ENDED_OK or ENDED_NOT_OK. Value of this variable should be OK or NOK.
    ...    -${ServiceAccountName}: This field specifies the service account from which a secret has to be unlinked
    ...    -${SecretName}: This field specifies the secret file that is to be unlinked from a service account
    ...    -${ProjectName}: This field specifies the project name in which the unlink secret action has to be performed
    Generate String
    Init Action    ${UNLINK_SECRET}
    Connect To OpenShift
    Run Keyword If    '${ServiceAccountName}' == 'Invalid'    Action Set    &UC4RB_OPENSHIFT_SERVICE_ACC#    ${Generated_Name}_${Time}    ELSE    Action Set
    ...    &UC4RB_OPENSHIFT_SERVICE_ACC#    ${ServiceAccountName}
    Run Keyword If    '${SecretName}' == 'Invalid'    Action Set    &UC4RB_OPENSHIFT_SECRET_NAME#    ${Generated_Name}_${Time}    ELSE    Action Set
    ...    &UC4RB_OPENSHIFT_SECRET_NAME#    ${SecretName}
    Run Keyword If    '${ProjectName}' == 'Invalid'    Action Set    &UC4RB_OPENSHIFT_PROJECT#    ${Generated_Name}_${Time}    ELSE    Action Set
    ...    &UC4RB_OPENSHIFT_PROJECT#    ${ProjectName}
    Action Execute
    Run Keyword If    '${OK_NOK}' == 'OK'    Assert Success    ELSE    Assert Failure

Teardown
    Log    *******End Test "UNLINK SECRET"*******
